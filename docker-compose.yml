services:
  back-end:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: back-end
    restart: on-failure
    env_file:
      - .env # Use the .env file for environment variables
    ports:
      - 8080:8080
    environment:
      CLIENT_URL: ${CLIENT_URL}
      DASHBOARD_URL: ${DASHBOARD_URL}
      PROD_URL: ${PROD_URL}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      TEST_EMAIL_HOST: ${TEST_EMAIL_HOST}
      TEST_EMAIL_PORT: ${TEST_EMAIL_PORT}
      TEST_EMAIL_USERNAME: ${TEST_EMAIL_USERNAME}
      TEST_EMAIL_PASSWORD: ${TEST_EMAIL_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_SECRET_REFRESH_KEY: ${JWT_SECRET_REFRESH_KEY}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      RECAPTCHA_V3_SECRET_KEY: ${RECAPTCHA_V3_SECRET_KEY}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      - postgresql-db
    networks:
      - mynetwork

  postgresql-db:
    image: postgres:16-alpine
    container_name: postgresql-db
    restart: always
    env_file:
      - .env # Use the .env file for environment variables
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - mynetwork

  # web-server:
  #   image: nginx:1.21.6-alpine
  #   container_name: web-server
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./nginx/conf/:/etc/nginx/conf.d/:ro
  #     - ./certbot/www/:/var/www/certbot/:ro
  #     - ./certbot/conf/:/etc/letsencrypt/:ro
  #   depends_on:
  #     - back-end
  # ssl-service:
  #   image: certbot/certbot:v1.23.0
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/:rw
  #     - ./certbot/conf/:/etc/letsencrypt/:rw
  #   depends_on:
  #     - web-server
  #   command:
  #     # - renew       Uncomment this and comment the rest to renew cert
  #     - certonly
  #     - --webroot
  #     - -w
  #     - /var/www/certbot/
  #     - --email=<Your email address>
  #     - --agree-tos
  #     - --no-eff-email
  #     - -d
  #     - <Your domain>

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres-data:
