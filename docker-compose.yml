services:
  back-end:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: back-end
    ports:
      - 8080:8080
    environment:
      CLIENT_URL: ${CLIENT_URL}
      DASHBOARD_URL: ${DASHBOARD_URL}
      PROD_URL: ${PROD_URL}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      TEST_EMAIL_HOST: ${TEST_EMAIL_HOST}
      TEST_EMAIL_PORT: ${TEST_EMAIL_PORT}
      TEST_EMAIL_USERNAME: ${TEST_EMAIL_USERNAME}
      TEST_EMAIL_PASSWORD: ${TEST_EMAIL_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_SECRET_REFRESH_KEY: ${JWT_SECRET_REFRESH_KEY}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      RECAPTCHA_V3_SECRET_KEY: ${RECAPTCHA_V3_SECRET_KEY}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      - postgresql-db
    networks:
      - mynetwork

  postgresql-db:
    image: postgres:16-alpine
    container_name: postgresql-db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres-data:
