name: Project RING! - Front-end Web CI/CD flow

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_CLIENT_PROJECT_ID }}

on:
  push:
    branches: [main]
    paths:
      - "front-end/**"
      - "!front-end/apps/dashboard/**"
      - ".github/workflows/front-end.yaml"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    # Enable Vercel remote caching
    env:
      TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      TURBO_TEAM: ${{ vars.VERCEL_TEAM }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: front-end/package-lock.json

      - name: Install Dependencies
        working-directory: front-end/apps/web
        run: npm ci

      - name: Run tests
        working-directory: front-end/apps/web
        run: npx turbo run test

  deploy:
    name: Deploy Cloudflare
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
